@model IEnumerable<FlashcardApp.ViewModels.FlashCardViewModel>

@{
    ViewData["Title"] = "My Flashcards";
    var categories = ViewBag.Categories as List<FlashcardApp.ViewModels.CategoryViewModel> ?? new List<FlashcardApp.ViewModels.CategoryViewModel>();
}

<div class="container mt-5">
    <h2 class="text-center mb-4">My Flashcard App</h2>
    <h4>Total Flashcards: @ViewBag.TotalFlashCards</h4>

    <!-- Categories Section -->
    <div class="mb-5">
        <h3>My Categories: </h3>
        @if (categories.Any())
        {
            <div class="row">
                @foreach (var category in categories)
                {
                    <div class="col-md-4 mb-3">
                        <div class="card">
                            <div class="card-body d-flex justify-content-between align-items-center">
                                <span>@category.Name</span>
                                <span class="badge bg-success">
                                    @(Model.Count(f => f.CategoryName == category.Name))
                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted">No categories yet. Add flashcards to see them here!</p>
        }
    </div>

  <div>
    <h3>My Flashcard Collection</h3>
    <p>
        <a asp-action="Create" class="btn btn-primary">Add New Flashcard</a>
    </p>
    @if (Model.Any())
    {
        <div class="flashcard-container">
            @foreach (var item in Model)
            {
                <div class="flashcard">
                    <div class="flashcard-header">
                        <h5>@Html.DisplayFor(modelItem => item.CategoryName)</h5>
                    </div>
                    <div class="flashcard-body">
                        <p><strong>Question:</strong> @Html.DisplayFor(modelItem => item.Question)</p>
                        <p><strong>Answer:</strong> @Html.DisplayFor(modelItem => item.Answer)</p>
                    </div>
                    <div class="flashcard-footer">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                        <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this flashcard?');">Delete</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">You haven’t created any flashcards yet. Get started with the button above!</p>
    }
</div>

</div>

<style>
    .flashcard-container {
        display: flex;
        flex-wrap: wrap;
        gap: 16px;
        justify-content: space-between;
    }

    .flashcard {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        width: calc(33% - 16px); /* Adjust width as per requirement */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        display: flex;
        flex-direction: column;
        padding: 16px;
        transition: transform 0.3s ease;
    }

    .flashcard:hover {
        transform: translateY(-8px);
    }

    .flashcard-header h5 {
        margin: 0;
        font-size: 1.2em;
        font-weight: bold;
    }

    .flashcard-body p {
        font-size: 1em;
        margin: 8px 0;
    }

    .flashcard-footer {
        display: flex;
        gap: 8px;
        justify-content: space-between;
        margin-top: auto;
    }

    .flashcard-footer a,
    .flashcard-footer button {
        padding: 6px 12px;
        font-size: 0.9em;
    }
</style>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
}